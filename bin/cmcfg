#! /usr/bin/env bash
#------------------------------------------------------------------------------#
# Check required environment variables
#------------------------------------------------------------------------------#

if [ -z "${CMAKE_PREFIX_PATH}" ] ; then
cat << EOF
You must set CMAKE_PREFIX_PATH in your environment before you can use this
tool. Often this error means that you have neglected to load an environment
module or activate a spack environment.
EOF
  exit 1
fi

#------------------------------------------------------------------------------#
# Colors
#------------------------------------------------------------------------------#

WH=$'\e[38;5;15m'
GR=$'\e[38;5;46m'
RED=$'\e[38;5;160m'
GO=$'\e[38;5;228m'
NE=$'\e[0m'

#------------------------------------------------------------------------------#
# Help message
#------------------------------------------------------------------------------#

help(){
  command=`echo $0 | sed 's,.*\/,,g'`
cat << EOF

 $WH CMake Configuration Tool$NE

 $WH Usage: $GO$command$NE [flags] [<compiler>] \
[<generator>] [<misc>]

 $WH Flags:$NE
    $GO-h, --help$NE     Show this message and exit.
    $GO-c, --ccmake$NE   Enable curses mode.
    $GO-d, --dryrun$NE   Print the cmake configure line and exit.
    $GO-g, --debug$NE    Enable debug mode.
    $GO-n, --no-opt$NE   Force -O0 in debug mode (implies -d)
    $GO-p, --pedantic$NE Enable -Werror.

    The$GR debug$NE mode configures CMake with flags that \
aid in debugging code.
    Note that the related$GR no-opt$NE mode \
may be a no-op for some compilers.

 $WH Compiler Options:$NE
   $GR clang (default)$NE
    gnu
    oneapi

 $WH Generator Options:$NE
   $GR unix  - Unix Makefiles (default)$NE
    ninja - Ninja

 $WH Miscellaneous Options:$NE
    Any additional arguments, e.g.:
    $GR$ ./configure -g gnu -DENABLE_OPTION=OFF$NE
    will be appended to the end of the cmake command. This example will
    disable$GR OPTION$NE and override the associated setting (if any) from the
    configure script.

 $WH NOTES:$NE
    2) You can automatically set the path to the clang-format executable by
       setting$GO CLANG_FORMAT_EXECUTABLE$NE in your environment, e.g.:
       $GR$ export CLANG_FORMAT_EXECUTABLE=/path/to/clang-format$NE

    3) You can automatically set the install path by setting
      $GO CONFIG_INSTALL_PREFIX$NE in your environment, e.g.:
       $GR$ export CONFIG_INSTALL_PREFIX=/path/to/install$NE

    3) You can automatically set the generator by setting
      $GO CONFIG_SCRIPT_GENERATOR$NE in your environment, e.g.:
       $GR$ export CONFIG_SCRIPT_GENERATOR=Ninja$NE

    4) It may be necessary to completely remove previous build configurations
       for cmake to work. In particular, if you change the compiler, you will
       need to start from a clean build directory.
EOF
}

#------------------------------------------------------------------------------#
# Get the path to the project from which this script was called
#------------------------------------------------------------------------------#

if [ ! -f $1/CMakeLists.txt ] ; then
  help
  exit
fi
cwd=$1
shift

#------------------------------------------------------------------------------#
# Environment
#------------------------------------------------------------------------------#

CMAKE_INSTALL_PREFIX="${CONFIG_INSTALL_PREFIX:-/usr/local}"
SCRIPT_GENERATOR="${CONFIG_SCRIPT_GENERATOR:-Unix Makefiles}"
CLANG_FORMAT="-DENABLE_FORMAT=ON ${CLANG_FORMAT_EXECUTABLE:+"-DClangFormat_EXECUTABLE=${CLANG_FORMAT_EXECUTABLE}"}"

#------------------------------------------------------------------------------#
# Check command-line arguments
#------------------------------------------------------------------------------#

cmake_mode=cmake
cmake_args=""
dryrun=0
debug=0
noopt=0

# Default compiler settings
WARN="-Wall -Wundef -W -Wno-parentheses"
PEDANTIC=""
OPTIMIZATION="-O2"

# Default is clang
SCRIPT_C_COMPILER=clang
SCRIPT_CXX_COMPILER=clang++
C_FLAGS="-fcolor-diagnostics -ferror-limit=4"
CXX_FLAGS=$C_FLAGS

SCRIPT_BUILD_TYPE=RelWithDebInfo

SCRIPT_ENABLE_UNIT_TESTS="ON"

#------------------------------------------------------------------------------#
# Check command-line arguments
#------------------------------------------------------------------------------#

while [[ $# -gt 0 ]]
do

	case $1 in
		--help|-h)
      help
			exit
		  ;;
		--ccmake|-c)
			cmake_mode=ccmake
		  ;;
		--dryrun|-d)
			dryrun=1
			cmake_mode=echo
		  ;;
    --debug|-d)
      debug=1
      SCRIPT_BUILD_TYPE=Debug
      OPTIMIZATION="-O0" # clang default
      ;;
    --no-opt|-n)
      debug=1
      noopt=1
      SCRIPT_BUILD_TYPE=Debug
      OPTIMIZATION="-O0" # clang default
      ;;
    --pedantic|-p)
      PEDANTIC="-Werror"
      ;;
    ninja)
      SCRIPT_GENERATOR="Ninja"
      ;;
    clang)
      ;;
    gnu)
      SCRIPT_C_COMPILER=gcc
      SCRIPT_CXX_COMPILER=g++
      C_FLAGS="-fmax-errors=5 -fdiagnostics-color=always"
      CXX_FLAGS=$C_FLAGS

      OPTIMIZATION="-Og"
      if [ $noopt -eq 1 ]; then
        OPTIMIZATION="-O0"
      fi

      if [ $debug -eq 1 ]; then
        OPTIMIZATION="$OPTIMIZATION -ggdb -gdwarf-5"
      fi
      ;;
    oneapi)
      SCRIPT_C_COMPILER=icx
      SCRIPT_CXX_COMPILER=icpx
      C_FLAGS="-diag-error-limit=5"
      CXX_FLAGS=$C_FLAGS

      if [ $debug -eq 1 ]; then
        OPTIMIZATION="$OPTIMIZATION -g"
      fi
      ;;
    -D*)
      cmake_args="$cmake_args $1"
      ;;
    *)
      echo "$RED  Unrecognized option: $1$NE"
      help
      exit
      ;;
	esac

	shift # next argument
done

SCRIPT_C_FLAGS="$C_FLAGS $WARN $PEDANTIC $OPTIMIZATION"
SCRIPT_CXX_FLAGS="$CXX_FLAGS $WARN $PEDANTIC $OPTIMIZATION"

#------------------------------------------------------------------------------#
# Call CMake command
#------------------------------------------------------------------------------#

([[ $dryrun -ne 1 ]] && set -x; $cmake_mode \
  -G"$SCRIPT_GENERATOR" \
  -DCMAKE_BUILD_TYPE=$SCRIPT_BUILD_TYPE \
  -DCMAKE_C_COMPILER=$SCRIPT_C_COMPILER \
  -DCMAKE_C_FLAGS="$SCRIPT_C_FLAGS" \
  -DCMAKE_CXX_COMPILER=$SCRIPT_CXX_COMPILER \
  -DCMAKE_CXX_FLAGS="$SCRIPT_CXX_FLAGS" \
  -DENABLE_UNIT_TESTS=$SCRIPT_ENABLE_UNIT_TESTS \
  -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \
  -DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH} \
  ${CLANG_FORMAT} \
  $cmake_args \
  $cwd
)

#------------------------------------------------------------------------------#
# vim: syntax=sh
#------------------------------------------------------------------------------#
