#!/usr/bin/perl
################################################################################
# Create new test project
################################################################################
use Getopt::Std;

# get command line options
getopts('c:f:', \%opts);

$command = $0; $command =~ s/^.*\///g;
$usage = "$command version 1.0\n" .
	"usage: $command -c c++ compiler -f CXXFLAGS <directory name>\n";

die $usage if $#ARGV < 0;

$directory = $ARGV[0];
$compiler = $opts{'c'};
$cxxflags = $opts{'f'};

if(!$compiler) {
	$compiler = "g++";
}

if(!$cxxflags) {
	$cxxflags = "-g -O2 -std=c++17 -I.";
}

# create new directory for project
mkdir($directory);

# create Makefile
&create_Makefile;

# create main.cc
&create_main;

`cd $directory; mkdir build; cd build; cmake ..; make`;

################################################################################
# subroutines
################################################################################

sub create_Makefile {
open(MAKEFILE, "> $directory/CMakeLists.txt") || die "Failed opening Makefile\n";
select(MAKEFILE);

print<<"EOF";
#------------------------------------------------------------------------------#
# CMakeLists.txt
#------------------------------------------------------------------------------#

cmake_minimum_required(VERSION 3.12)

project(Test LANGUAGES CXX C)

set(CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_EXTENSIONS OFF)

add_executable(test main.cc)
EOF

close(MAKEFILE);
}

sub create_main {
open(MAIN, "> $directory/main.cc") || die "Failed opening main.cc\n";
select(MAIN);

print<<"EOF";
#include <iostream>

int main(int argc, char ** argv) {

	return 0;
} // main
EOF

close(MAIN);
}
